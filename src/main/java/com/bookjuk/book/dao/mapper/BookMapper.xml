<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bookjuk.book.dao.mapper.BookMapper">

	<!-- 리스트 목록 Count -->
	<select id="bookCount" resultType="int">
		SELECT nvl(count(book_num),0) FROM book
	</select>
	
	<select id="bookMainCateCount" parameterType="String" resultType="int">
		SELECT nvl(count(b.book_num),0) FROM book b, category c WHERE b.book_num = c.book_num and c.category_main_eng = #{category}
	</select>
	
	<select id="bookSubCateCount" parameterType="String" resultType="int">
		SELECT nvl(count(b.book_num),0) FROM book b, category c WHERE b.book_num = c.book_num and c.category_sub_eng = #{category}
	</select>

	<!-- 리스트 조회 -->
	<select id="bestList" parameterType="java.util.Map" resultType="com.bookjuk.book.dto.BookDto">
		<![CDATA[
		SELECT j.book_num, j.book_img, j.book_name, j.book_author, j.book_publisher, j.book_date, j.book_intro, j.product_disprice FROM (SELECT i.*, ROWNUM rnum FROM(SELECT b.book_num, b.book_img, b.book_name, b.book_author, b.book_publisher, b.book_date, b.book_intro, p.product_disprice FROM book b, CATEGORY c, product p WHERE c.book_num = b.book_num AND b.book_num = p.book_num ORDER BY product_sales DESC)i)j WHERE j.rnum >= #{startRow} AND j.rnum <= #{endRow}
		]]>
	</select>

	<select id="newList" parameterType="java.util.Map" resultType="com.bookjuk.book.dto.BookDto">
		<![CDATA[
		SELECT j.book_num, j.book_img, j.book_name, j.book_author, j.book_publisher, j.book_date, j.book_intro, j.product_disprice FROM (SELECT i.*, ROWNUM rnum FROM(SELECT b.book_num, b.book_img, b.book_name, b.book_author, b.book_publisher, b.book_date, b.book_intro, p.product_disprice FROM book b, CATEGORY c, product p WHERE c.book_num = b.book_num AND b.book_num = p.book_num ORDER BY book_date DESC)i)j WHERE j.rnum >= #{startRow} AND j.rnum <= #{endRow}
		]]>
	</select>
	
	<select id="issueList" parameterType="java.util.Map" resultType="com.bookjuk.book.dto.BookDto">
		<![CDATA[
		SELECT j.book_num, j.book_img, j.book_name, j.book_author, j.book_publisher, j.book_date, j.book_intro, j.product_disprice FROM (SELECT i.*, ROWNUM rnum FROM(SELECT b.book_num, b.book_img, b.book_name, b.book_author, b.book_publisher, b.book_date, b.book_intro, p.product_disprice FROM book b, CATEGORY c, product p WHERE c.book_num = b.book_num AND b.book_num = p.book_num ORDER BY product_count DESC)i)j WHERE j.rnum >= #{startRow} AND j.rnum <= #{endRow}
		]]>
	</select>
	
	<select id="discountList" parameterType="java.util.Map" resultType="com.bookjuk.book.dto.BookDto">
		<![CDATA[
		SELECT j.book_num, j.book_img, j.book_name, j.book_author, j.book_publisher, j.book_date, j.book_intro, j.product_disprice FROM (SELECT i.*, ROWNUM rnum FROM(SELECT b.book_num, b.book_img, b.book_name, b.book_author, b.book_publisher, b.book_date, b.book_intro, p.product_disprice FROM book b, CATEGORY c, product p WHERE c.book_num = b.book_num AND b.book_num = p.book_num ORDER BY book_date ASC)i)j WHERE j.rnum >= #{startRow} AND j.rnum <= #{endRow}
		]]>
	</select>

	<select id="bookMainCateList" parameterType="java.util.Map" resultType="com.bookjuk.book.dto.BookDto">
		<![CDATA[
		SELECT j.book_num, j.book_img, j.book_name, j.book_author, j.book_publisher, j.book_date, j.book_intro, j.product_disprice FROM (SELECT i.*, ROWNUM rnum FROM(SELECT b.book_num, b.book_img, b.book_name, b.book_author, b.book_publisher, b.book_date, b.book_intro, p.product_disprice FROM book b, CATEGORY c, product p WHERE c.book_num = b.book_num AND b.book_num = p.book_num AND c.category_main_eng = #{category})i)j WHERE j.rnum >= #{startRow} AND j.rnum <= #{endRow}
		]]>
	</select>
	
	<select id="bookSubCateList" parameterType="java.util.Map" resultType="com.bookjuk.book.dto.BookDto">
		<![CDATA[
		SELECT j.book_num, j.book_img, j.book_name, j.book_author, j.book_publisher, j.book_date, j.book_intro, j.product_disprice, j.category_sub_kor FROM (SELECT i.*, ROWNUM rnum FROM(SELECT b.book_num, b.book_img, b.book_name, b.book_author, b.book_publisher, b.book_date, b.book_intro, p.product_disprice, c.category_sub_kor FROM book b, CATEGORY c, product p WHERE c.book_num = b.book_num AND b.book_num = p.book_num AND c.category_sub_eng = #{category})i)j WHERE j.rnum >= #{startRow} AND j.rnum <= #{endRow}
		]]>
	</select>

	<!-- 회원 리뷰 -->
	<select id="reviewCount" parameterType="int" resultType="int">
		SELECT nvl(count(*),0) FROM member_review WHERE book_num = #{book_num}
	</select>
	
	<select id="reviewList" parameterType="int" resultType="com.bookjuk.book.dto.BookDto">
		SELECT * FROM member_review WHERE book_num = #{book_num} ORDER BY review_date DESC
	</select>
	
	<insert id="insertReview" parameterType="com.bookjuk.book.dto.BookDto">
		INSERT INTO member_review VALUES (review_num_seq.NEXTVAL, #{book_num}, #{review_score}, #{member_id}, #{review_content}, #{review_date})
	</insert>
	
	<delete id="deleteReview" parameterType="int">
		DELETE FROM member_review WHERE review_num = #{review_num}
	</delete>
	
	<!-- 별점 업데이트 -->
	<update id="scoreUpdate" parameterType="com.bookjuk.book.dto.BookDto">
		UPDATE book SET book_score = #{book_score} WHERE book_num = #{book_num}
	</update>

	<!-- 도서 상세 페이지 -->
	<update id="readCount" parameterType="int">
		UPDATE product set product_count = product_count + 1 WHERE book_num = #{book_num}
	</update>
	
	<select id="detail" parameterType="int" resultType="com.bookjuk.book.dto.BookDto">
		SELECT a.* FROM (SELECT b.book_num, book_img, book_name, book_author, book_publisher, book_date, book_score, book_editor, book_contents, book_intro, book_author_info, book_publisher_review, category_main_kor, category_sub_kor, category_main_eng, category_sub_eng, product_amount, product_price, product_disprice, product_discount, product_point, product_sales, product_count, product_delivery FROM book b, CATEGORY c, product p WHERE c.book_num = b.book_num AND b.book_num = p.book_num)a WHERE a.book_num = #{book_num}
	</select>
	
	<!-- 할인 도서 업데이트 로직 -->
	<select id="discountSelect" parameterType="java.util.Map" resultType="com.bookjuk.book.dto.BookDto">
		<![CDATA[
		SELECT j.book_num, j.product_discount FROM (SELECT i.*, ROWNUM rnum FROM(SELECT b.book_num, p.product_discount FROM book b, product p WHERE b.book_num = p.book_num ORDER BY book_date ASC)i)j WHERE j.rnum >= 1 AND j.rnum <= 20
		]]>
	</select>
	
	<update id="discountUpdate" parameterType="int">
		UPDATE product SET product_discount = 80, product_disprice = product_price * 0.2, product_point = 0 WHERE book_num = #{book_num}
	</update>
	
	<!-- 장바구니 추가 -->
	<insert id="insertCart" parameterType="com.bookjuk.book.dto.BookDto">
		INSERT INTO cart VALUES (cart_num_seq.nextval, #{order_id}, #{book_num}, 1, sysdate)
	</insert>
		
	<!-- 도서 검색 기능 -->
	<select id="bookSearchCount" parameterType="String" resultType="int">
		<![CDATA[
		SELECT nvl(count(*),0) FROM book WHERE book_name LIKE '%'||#{search}||'%' OR book_author LIKE '%'||#{search}||'%' OR book_publisher LIKE '%'||#{search}||'%'
		]]>
	</select>
	
	<select id="searchList" parameterType="java.util.Map" resultType="com.bookjuk.book.dto.BookDto">
		<![CDATA[
		SELECT j.book_num, j.book_img, j.book_name, j.book_author, j.book_publisher, j.book_date, j.book_intro, j.product_disprice FROM(SELECT i.*, ROWNUM rnum FROM (SELECT b.book_num, b.book_img, b.book_name, b.book_author, b.book_publisher, b.book_date, b.book_intro, p.product_disprice FROM book b, CATEGORY c, product p WHERE c.book_num = b.book_num AND b.book_num = p.book_num ORDER BY book_date DESC)i WHERE book_name LIKE '%'||#{search}||'%' OR book_author LIKE '%'||#{search}||'%')j WHERE j.rnum >= #{startRow} AND j.rnum <= #{endRow}
		]]>
	</select>
	
</mapper>